- if @logo.present?
  .print-only
    .print-logo{class: @logo.portrait? ? 'is-portrait' : 'is-landscape' }= image_tag(@logo.versions.url(:original))

- breadcrumb('Orders', :orders)
- breadcrumb("#{@order.name} - #{@order.reference}")

= record_name("#{@order.name} - #{@order.reference}", 'shopping-cart')

= content(:class => 'inset') do
  #summary= process_progression(@order)

  - if @order.payment_errors?
    .panel
      %p.note
        %span.indicator.warning
          %fa.fa-warning
        There were problems billing this order. See the activity logs for more details.

  .panel
    .order-overview
      %ul
        %li
          %span.key Reference #
          %span.value.reference= @order.reference
        %li
          %span.key Phone
          %span.value= @order.phone
        %li
          %span.key Email
          %span.value= link_to(@order.email, "mailto:#{@order.email}?subject=Your order #{@order.reference}")
        %li
          %span.key Placed
          %span.value= @order.logs.first.created_at.to_formatted_s(:pretty)
        %li
          %span.key Status
          %span.value= @order.status.humanize
        %li
          %span.key Total
          %span.value= "#{@order.sku_total_quantity} Item#{@order.sku_total_quantity > 1 ? 's' : ''},"
          %strong.value= @order.formatted_total
        - unless @order.payment.blank?
          - if @order.payment.authorization_expiry_warning?
            %li
              %span.key Authorization
              - if @order.payment.authorization_expired?
                %span.value.indicator.warning Expired!
              - else
                %span.value.indicator.warning Expires Soon!

    .billing
      %h3 Billing Details

      - if @order.payment.present?
        %p.card-details
          %span.type{:class => "card-type-#{@order.payment.card_type}"}= @order.payment.card_type
          %span.number= @order.payment.number
          - unless @order.payment.name.blank?
            %span.name= @order.payment.name
          %span.expiry Expiry: #{@order.payment.expiry}
      - else
        %p.info.warning This order has no payment information attached. See the logs for more detail.

    .address
      %h3 Billing Address

      %p
        %span.name
          %strong= @order.name
          - if @order.billing_company
            ,
            %span.company #{@order.billing_company}
        %br/
        %span.street= @order.billing_street
        %br/
        %span.city= @order.billing_city
        %br/
        %span.state #{@order.billing_state} #{@order.billing_postcode}

    .address
      %h3 Shipping Address

      %p
        %span.name
          %strong= @order.ship_to
          - if @order.shipping_company
            ,
            %span.company #{@order.shipping_company}
        %br/
        %span.street= @order.shipping_street
        %br/
        %span.city= @order.shipping_city
        %br/
        %span.state #{@order.shipping_state} #{@order.shipping_postcode}

  - unless @order.shipping_instructions.blank?
    .shipping-instructions
      %h3 Shipping Instructions
      %p
        %span.value= @order.shipping_instructions

  - if @order.is_gift?
    .gift-details
      %h3
        %span.flag.gift-order Gift
      %p
        %span.value= @order.gift_message

  - unless @order.promotions.blank?
    %h3.items #{@order.promotions.count} #{@order.promotions.count > 1 ? 'promotions apply' : 'promotion applies'} to this order
    %table.promotions
      %thead
        %tr
          %th Promotion
          %th Status

      %tbody
        - @order.promotions.each do |promo|
          %tr
            %td
              %a{:href => admin_promotion_url(promo)}
                %strong #{promo.name}:
              = promotion_summary(promo)
            %td
              = promo.status.capitalize

  - if @order.member.present?
    %h3.items Membership
    %p Club member: #{link_to(@order.member.name, path(:edit, @order.member))}

  - if @order.offer_order.present?
    %h3.items Subscription Offer
    %p This order is part of #{link_to(@order.offer.name, path(@order.offer))}

  %h3.items Order contents
  %table.items
    %thead
      %tr
        %th Product/SKU
        %th.quantity Quantity
        %th.currency Price
        %th.currency
          - if @order.discounted?
            Pre-discount
          - else
            Total
        %th.currency
          - if @order.discounted?
            Total

    %tbody
      - @order.sku_items.each do |item|
        %tr
          %td
            = link_to(item.description, path(item.sku.product), :class => 'title')
          %td.quantity
            %span.numeric= item.quantity
          %td.currency
            %span.numeric= item.price_summary
          %td.currency
            %span.numeric= item.pre_discount_total
          %td.currency
            - if item.adjusted?
              = item.total
            - else
              &nbsp;

    %tfoot
      %tr
        %th(colspan=3)
          Product Total
        %td.currency
          %span.numeric= @order.original_product_total
        %td.currency
          - if @order.adjusted_products?
            %span.numeric.discount #{@order.product_total}
          - else
            &nbsp;

      %tr
        %th(colspan=3)
          Shipping
        %td.currency
          %span.numeric= @order.original_shipping_total
        %td.currency
          - if @order.free_shipping?
            FREE
          - elsif @order.adjusted_shipping?
            %span.numeric= @order.shipping_total

      - if @order.discounted?
        %tr
          %th(colspan=3)
            Total discount
          %td.currency{colspan: 2}
            %span.numeric= "#{@order.formatted_total_discount}"

      %tr.total
        %th(colspan=3)
          Total
        %td.currency
          %span.numeric= @order.formatted_original_total
        %td
          - if @order.discounted?
            %span.numeric.discount #{@order.formatted_total}

  %h3 Tracking
  .tracking.collapsible{:class => @order.tracking_reference.blank? ? 'expanded' : 'collapsed'}
    - if @order.trackable?
      - unless @order.tracking_reference.blank?
        %p#displayTrackingReference.summary
          Tracking reference:
          %strong #{@order.tracking_reference}
          %a.collapsible-expander{:href => '#editTrackingReference'} Change

          = link_to('Track order&hellip;'.html_safe, @order.track_shipment, :class => 'track-order')

      #editTrackingReference.details
        = simple_form_for(@order, :url => :update_admin_order_process) do |f|
          = f.input(:tracking_reference)
          %button{:type => 'submit'} Save

    - else
      %p#displayTrackingReference.note This order will be trackable once it has been packed.

  %h3#order-activity-log.logs Logs
  %table.logs
    %thead
      %tr
        %th.boolean Succeeded?
        %th Action
        %th.notes Notes
        %th.meta On

    %tbody
      - @order.logs.summary.each do |log|
        %tr
          %td.boolean
            %span(class="boolean #{log.succeeded?}")
              %span= friendly_bool(log.succeeded?)
          %td
            %span.title= past_tense(log.action)
          %td
            - if log.notes?
              = simple_format(log.notes)
            - else
              &nbsp;
          %td.meta
            %span= log.created_at.to_formatted_s(:pretty)

= footer do
  %button.print Print

  - if @order.run?(:bill)
    - if @order.payment_errors?
      = link_to('Retry Billing', path(:bill, :order_process, :id => @order), :class => 'button primary')
    - else
      = link_to('Bill', path(:bill, :order_process, :id => @order), :class => 'button primary')

  - if @order.run?(:pack)
    = form_for(@order, :url => path(:pack, :order_process, :id => @order)) do
      %button Pack

  - if @order.run?(:ship)
    = form_for(@order, :url => path(:ship, :order_process, :id => @order)) do
      %button Ship

  - if @order.run?(:cancel)
    = link_to('Cancel', path(:cancel, :order_process, :id => @order), :title => 'Cancel Order', :class => 'button delete')
